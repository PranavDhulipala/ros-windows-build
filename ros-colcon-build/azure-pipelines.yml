trigger: none
pr: none

variables:
  ROSWIN_COLCON_BUILD_WORKING_DIRECTORY: $(Build.SourcesDirectory)\ros-colcon-build

jobs:
- job: Build
  timeoutInMinutes: 300
  pool:
    vmImage: 'vs2017-win2016'
  variables:
    ROSWIN_ROSDEP_LIST_URI: 'https://raw.githubusercontent.com/ms-iot/rosdistro-db/init_windows_py37/rosdep/sources.list.d/10-ms-iot.list'
    ROSWIN_METAPACKAGE: 'ALL'
    ROSWIN_VSTOOL: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat'
  strategy:
    matrix:
      melodic-ros_base:
        ROSWIN_METAPACKAGE: 'ros_core'
        ROSDISTRO_INDEX_URL: 'https://raw.githubusercontent.com/ms-iot/rosdistro-db/init_windows/index.yaml'
        ROS_DISTRO: 'melodic'
        ROS_ETC_DIR: 'c:\opt\ros\melodic\x64\etc\ros'
        ROSWIN_CMAKE_INSTALL_PREFIX: 'c:/opt/ros/melodic/x64'
      melodic-desktop_full:
        ROSWIN_METAPACKAGE: 'desktop_full'
        ROSDISTRO_INDEX_URL: 'https://raw.githubusercontent.com/ms-iot/rosdistro-db/init_windows/index.yaml'
        ROS_DISTRO: 'melodic'
        ROS_ETC_DIR: 'c:\opt\ros\melodic\x64\etc\ros'
        ROSWIN_CMAKE_INSTALL_PREFIX: 'c:/opt/ros/melodic/x64'
      crystal-ros_core:
        ROSWIN_METAPACKAGE: 'ros_core'
        ROS_DISTRO: 'crystal'
        ROS_ETC_DIR: 'c:\opt\ros\crystal\x64\etc\ros'
        ROSWIN_CMAKE_INSTALL_PREFIX: 'c:/opt/ros/crystal/x64'
      crystal-ros_base:
        ROSWIN_METAPACKAGE: 'ros_base'
        ROS_DISTRO: 'crystal'
        ROS_ETC_DIR: 'c:\opt\ros\crystal\x64\etc\ros'
        ROSWIN_CMAKE_INSTALL_PREFIX: 'c:/opt/ros/crystal/x64'
      crystal-desktop:
        ROSWIN_METAPACKAGE: 'desktop'
        ROS_DISTRO: 'crystal'
        ROS_ETC_DIR: 'c:\opt\ros\crystal\x64\etc\ros'
        ROSWIN_CMAKE_INSTALL_PREFIX: 'c:/opt/ros/crystal/x64'
      dashing-ALL:
        ROS_DISTRO: 'dashing'
        ROS_ETC_DIR: 'c:\opt\ros\dashing\x64\etc\ros'
        ROSWIN_CMAKE_INSTALL_PREFIX: 'c:/opt/ros/dashing/x64'
  steps:
  - template: ..\common\agent-clean.yml
  - template: common\checkout.yml
  - template: common\build.yml
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'c:\opt\ros'
      artifactName: 'colcon-build-drop-$(ROS_DISTRO)-$(ROSWIN_METAPACKAGE)'
    displayName: 'Publish built binaries'
